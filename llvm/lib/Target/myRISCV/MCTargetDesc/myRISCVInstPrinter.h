#ifndef LLVM_LIB_TARGET_MYRISCV_MCTARGETDESC_MYRISCVINSTPRINTER_H
#define LLVM_LIB_TARGET_MYRISCV_MCTARGETDESC_MYRISCVINSTPRINTER_H

#include "MCTargetDesc/myRISCVMCTargetDesc.h"
#include "llvm/MC/MCInstPrinter.h"

namespace llvm {

class myRISCVInstPrinter : public MCInstPrinter {
public:
  myRISCVInstPrinter(const MCAsmInfo &mai, const MCInstrInfo &mii,
                     const MCRegisterInfo &mri)
      : MCInstPrinter(mai, mii, mri) {}

  void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                 const MCSubtargetInfo &STI, raw_ostream &OS) override;

  void printRegName(raw_ostream &OS, MCRegister Reg) const override;
  void printOperand(const MCInst *MI, unsigned OpNo, const MCSubtargetInfo &STI,
                    raw_ostream &OS, const char *Modifier = nullptr);

  // autogenerated by tblgen.
  std::pair<const char *, uint64_t> getMnemonic(const MCInst *MI) override;
  void printInstruction(const MCInst *MI, uint64_t Address,
                        const MCSubtargetInfo &STI, raw_ostream &O);
  bool printAliasInstr(const MCInst *MI, uint64_t Address,
                       const MCSubtargetInfo &STI, raw_ostream &O);
  static const char *getRegisterName(MCRegister Reg);
  static const char *getRegisterName(MCRegister Reg, unsigned AltIdx);
};
} // namespace llvm

#endif
